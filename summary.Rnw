\documentclass[landscape]{article}

\usepackage[margin=1in]{geometry}
\usepackage{microtype}
\usepackage{amsfonts,amssymb,amsbsy,amsmath,amsthm,mathtools}
\usepackage[onehalfspacing]{setspace}
\usepackage[section]{placeins}
\usepackage{times}
\IfFileExists{mtpro2.sty}
  {\let\Bbbk\relax\usepackage[mtphrb]{mtpro2}}
  {\usepackage{mathptmx}}

\title{HeartSteps data summary}
\author{}
\usepackage{graphicx}

\begin{document}
\maketitle
  
  % To include and evaluate R code inside knitr, enclose the code block in a "chunk". Open the chunk with << >>=, enclosing chunk name and options inside the brackets (See http://yihui.name/knitr/options/#chunk_options for chunk options). There can't be any line breaks in << >> and options are separated by commas. Close the chunk with @. Objects created inside chunks are global.
  
  % Read in the data: must be done by knitr (for some reason it can't read the global environment unless it creates it?). Options: don't _include_ output in the final .tex file. It's possible to somehow cache chunks, but there seem to be some nuanced best practices that I haven't quite gotten a grip on yet. I'll update when I do.

% Rscript -e "library(knitr); knit('summary.Rnw')"
% pdflatex summary

<<read_data, echo = FALSE, include = FALSE>>=
source("init.R")
source("summary.R")
setwd(sys.var$mbox)
load("analysis.RData")
users <- subset(users, !exclude)
@

\section{Data irregularities}

% irregularities

% EMA completion status - duplicates, typically with conflicting status
% read.csv("checks/dup_complete.csv")
% Unknown
% Use EMA response and notification tables to establish completion

% Response to planning - duplicates, possibly with different responses
% read.csv("checks/dup_planning.csv")
% Mainly revisions to response
% Use latest same-day response

% Context of engagements with EMA questionnaire - duplicates
% read.csv("checks/dup_ema_engaged.csv")
% Server-side handling of unlabelled activity classification,
% re-engagement with questionnaire before the last activity has been recognized
% Dispense with duplicate engagements having unknown activity status

% EMA response - multiple responses to the same question set
% read.csv("checks/dup_ema_response.csv")
% Answer revisions?
% Take latest same-day response

% Context/availability for planning
% Invalid linkage, conflict between randomized and actual planning status
% read.csv("checks/badlink_plan_notify.csv")
% Planning status read from device storage before being updated
% Use actual planning status and randomly generate any unknown planning allocation

% other issues

% Inconsistencies in message strings, needed for suggestion tagging and validation
% Strip escape codes, punctuation, non-ASCII characters, normalize white space

\begin{itemize}
\item Planning and EMA response duplicates/resubmissions
\item No available contextual data for planning
\item Momentary decision (to provide an activity suggestion or not) identifier persisting to the next time slot
\item Notifications sent outside time slots after time zone change and (post fix) multiple notifications potentially sent in the same time slot when moving between time zones.
\item Lack of time zone information with EMA response and changes to application settings (home/work locations and calendars)
\item Calendar data (apart from busyness status for momentary decision) unavailable
\item Lack of agreement between randomization decisions (for both planning and activity suggestions) and intervention received.
\end{itemize}

\section{User demographics and selected baseline activity levels}

% Toy example for using xtable
%<<xtable, echo = FALSE, results = "asis">>=
%n <- 100
%x <- rnorm(n)
%y <- 2*x + rnorm(n)
%out <- lm(y ~ x)
%library(xtable)
%tab <- xtable(summary(out)$coef, digits = c(0, 2, 2, 1, 2))
%print(tab)
%@

% Toy example with TikzDevice
%<<fig1, eval=TRUE, echo=FALSE, dev='tikz', fig.height=3.25, fig.width=3.25, %fig.align='center'>>= 
%plot(1, 1, main = 'Hello \\TeX !')
%@ 

\section{Daily step count}

The following plots give the daily step count for each user; solid lines correspond to Jawbone and the dotted to Google Fit. Breaks in the series indicate no available minute-by-minute step counts were recorded that day. Horizontal lines give the user average Jawbone step count. Vertical lines correspond to days on which the EMA that evening was not completed (either wholly or in part).

<<dailysteps1, echo=FALSE, dev="tikz", fig.width=9, fig.height=6.5, fig.align="center">>=
par(mfrow = c(7, 1), mar = c(0.5, 4, 0.5, 0), mgp = c(0.5, 0.1, 0),
    oma = c(1, 2, 0, 0), tcl = 0.25, las = 1)
invisible(sapply(users$user[1:7], daily.plot))
@

<<dailysteps2, echo=FALSE, dev="tikz", fig.width=9, fig.height=6.5, fig.align="center">>=
par(mfrow = c(7, 1), mar = c(0.5, 4, 0.5, 0), mgp = c(0.5, 0.1, 0),
    oma = c(1, 2, 0, 0), tcl = 0.25, las = 1)
invisible(sapply(users$user[8:14], daily.plot))
@

<<dailysteps3, echo=FALSE, dev="tikz", fig.width=9, fig.height=6.5, fig.align="center">>=
par(mfrow = c(7, 1), mar = c(0.5, 4, 0.5, 0), mgp = c(0.5, 0.1, 0),
    oma = c(1, 2, 0, 0), tcl = 0.25, las = 1)
invisible(sapply(users$user[15:21], daily.plot))
@

<<dailysteps4, echo=FALSE, dev="tikz", fig.width=9, fig.height=6.5, fig.align="center">>=
par(mfrow = c(7, 1), mar = c(0.5, 4, 0.5, 0), mgp = c(0.5, 0.1, 0),
    oma = c(1, 2, 0, 0), tcl = 0.25, las = 1)
invisible(sapply(users$user[22:28], daily.plot))
@

\end{document}
