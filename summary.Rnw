\documentclass{article}
\usepackage[T1]{fontenc}
\usepackage[margin=1in]{geometry}
\usepackage{microtype,booktabs,enumitem}
\usepackage{amsfonts,amssymb,amsbsy,amsmath,amsthm,mathtools}
\usepackage{setspace,ragged2e,array,etoolbox,hyperref}
\usepackage[capitalize]{cleveref}
\usepackage{titlesec}
\usepackage{graphicx}
\usepackage{times}
\IfFileExists{mtpro2.sty}{%
  \let\Bbbk\relax\usepackage[mtphrb]{mtpro2}}{\usepackage{mathptmx}}

% correct Acrobat distortion with opacity
\pdfpageattr{/Group <</S /Transparency /I true /CS /DeviceRGB>>}

\hypersetup{breaklinks,colorlinks,allcolors=blue,pdfpagemode=UseNone}

\BeforeBeginEnvironment{tabular}{\begin{center}}
\AfterEndEnvironment{tabular}{\end{center}}
\AtBeginEnvironment{tabular}{\small\hyphenpenalty=10000}
\AtBeginEnvironment{tikzpicture}{\small\hyphenpenalty=10000}
\newcolumntype{L}[1]{>{\RaggedRight\hspace{0pt}}p{#1}}
\newcolumntype{R}[1]{>{\RaggedLeft\hspace{0pt}}p{#1}}

\DeclareMathOperator{\uniform}{Uniform}

\linespread{1.15}
\raggedbottom
\allowdisplaybreaks
\columnsep=1em

% R code "chunk" format:
% <<chunk options>>= R code @
% see http://yihui.name/knitr/options/#chunk_options for chunk options

% commands to compile this document:
% Rscript -e "library(knitr); knit('summary.Rnw')"
% pdflatex summary

\title{\bfseries HeartSteps data summary}
\author{}
\date{\vskip -2em\normalsize\today}

\begin{document}
\maketitle
\thispagestyle{empty}

<<setup, include=FALSE, cache=FALSE>>=
library("knitr")
opts_chunk$set(fig.align="center", dev="tikz", dev.args=list(pointsize=9), cex=0.95, echo=FALSE, fig.width=6.5, fig.show="hold", par=TRUE)
knit_hooks$set(par=function(before, options, envir){
  if (before && options$fig.show!="none")
    par(mar=c(3, 5, 1, 0) + 0.5, mgp=c(2, 0.5, 0), oma=rep(0, 4), las=1, tcl=0.25)})
@

<<read_data, echo=FALSE, include=FALSE>>=
source("init.R")
source("summary.R")
setwd(sys.var$mbox)
load("csv.RData")
load("analysis.RData")
@

\section{Data irregularities}

\subsection{EMA and momentary decision identifiers}

The contextID variable was intended to identify each EMA notification and link between the EMA-related tables. However the contextID in EMA{\_}Context{\_}Notified does not represent all of the identifier values encountered in the remaining tables. Moreover different contextID values are associated with responses to what we would consider the same EMA. These issues might be due in part to the phone being turned off at the EMA time slot, but more investigation is needed.

Similarly decisionID was intended to identify each momentary decision (to provide a suggestion) table and link to the suggestion response table. However in both of the suggestion-related tables, some decisionID values are associated with what we would consider as different decision points. This is due to a previous decisionID value being read from the device storage before being updated.

Although infrequent, these issues prevent consistent linkage between tables. We instead construct identifiers with userID and date-time variables, accounting for time lags due for activity recognition or user response.

\subsection{Duplication}
\label{sec:dup}

Duplicate entries arise according to contextID, decisionID or identifiers we can construct from the data. The overall number of duplicates is small, but prevents systematic linkage between tables. We resolve this according to the rules below.

\begin{tabular}{L{0.25\textwidth}L{0.3\textwidth}L{0.3\textwidth}}
\toprule
Table & Source of duplication & Resolution \\
\midrule
EMA{\_}Context{\_}Engaged & Multiple activity recognition attempts & Discard duplicates with invalid activity recognition \\
\midrule
Structured{\_}Planning, Unstructured{\_}Planning & User revised response & Discard earlier or next-day plans \\
\midrule
EMA{\_}Response & User revised response & Discard earlier responses \\
\midrule
EMA{\_}Completed & Unknown & Take the maximum completion status among duplicates \\
\midrule
Momentary{\_}Decision & See \cref{sec:slot} & Discard decisions with wrong time slot or ``do not notify'' result \\
\bottomrule
\end{tabular}

\subsection{EMA completion status}

The EMA{\_}Completed table was intended to provide the EMA completion status, but it is not always in agreement with the data available in EMA{\_}Response. The reason for this is unclear, but we address the discrepancy by dispensing with the information in EMA{\_}Completed. Below we tabulate completion status by the number of EMA answers available for each contextID encountered in either table.

<<xtable, results="asis">>=
d <- merge(aggregate(completed ~ contextid, any, data = complete),
           subset(ema, order == 1), by = "contextid", all = TRUE)
d$ema.set.length[is.na(d$ema.set.length)] <- 0
d <- with(d, table(completed, ema.set.length, useNA = "ifany"))
d <- rbind(as.numeric(colnames(d)), d)
rownames(d) <- c("Number of answers", "Incomplete", "Complete")
print(xtable(d, digits = 0),
      floating = FALSE, booktabs = TRUE, include.colnames = FALSE,
      hline.after = c(-1, 1, nrow(d)))
@

\subsection{Missing EMA context}
\label{sec:context}

A total \Sexpr{with(daily, sum(is.na(context.utime) & !is.na(ema.set.length)))} of EMA responses have no contextual data available from notification or engagement. This was due to server-side dispensing of records for which the activity could not be recognized---a bug that was identified and patched before study closure.

\subsection{Randomized versus administered planning status}

The EMA{\_}Context{\_}Notified table provides the randomized planning status, but this does not always correspond to the planning status administered to the user when we link to the Structured{\_}Planning and Unstructured{\_}Planning tables by any reasonable identifier. This is due to the initial or previous planning status being read from the device storage before it is update. It is conjectured that this race condition arises randomly.

Among the user-days on which there was an EMA response and an available notification context, we can determine whether the randomized planning status did not agree with the planning carried out by the user. Instances of disagreement over time are depicted in the plot below, where a darker point coincides with disagreement, lighter with agreement, and no point to either no EMA response or missing notification context.
<<plan, fig.height=3>>=
with(daily, plot(study.day, user, pch = 16,
                 col = rev(grey.colors(2))[1 + (planning.today != planning)],
                 frame.plot = FALSE, xlab = "Study day", ylab = "User"))
d <- with(daily, sapply(unique(user),
                        function(u) with(subset(daily, user == u),
                                         table(planning.today != planning))))
d <- d[2, ] / apply(d, 2, sum)
@
The average rate of disagreement among the users is \Sexpr{round(mean(d), 2)} and ranged between \Sexpr{round(min(d), 2)} and \Sexpr{round(max(d), 2)}. For a given study day $t$, let $A_t$ denote the intended randomized level of planning and $B_t$ denote the administered level. If the race condition is indeed completely random, then $B_t$ follows the same marginal distribution as $A_t$. However we do not observe $B_t$ among users that do not respond to the EMA. To recover $\bar{B}_T$, we could fill-in the missing values sequentially by generating the race condition status $J_t \in \{0, 1\}$ according to some fixed probability. If $J_t = 0$ then we set $B_t = A_t$; otherwise, $B_t = A_{t-1}$ with $A_0$ indicating ``no planning''. (From \cref{sec:context}, we are also missing a few values for $A_t$, but these can easily be regenerated.)

\subsection{EMA question set}

The EMA{\_}Completed table provides a variable EMA{\_}Set{\_}Today, which should provide the order set of EMA questions sent to the user. In \Sexpr{with(notify, sum(ema.set.today != ema.set, na.rm = TRUE))} cases, it does not agree with the sequence of questions that the user answered. This is due to an initial or previous value of EMA{\_}Set{\_}Today being read from the device storage before being updated. To resolve this, we infer the administered question set from EMA{\_}Response; the question set for incomplete EMAs cannot be recovered.

\subsection{Notifications under changing time zone}
\label{sec:slot}

Prior to November notifications were sent according to the time zone at which the phone was last restarted, irrespective of the actual time zone. From November onward, notifications are sent under the actual time zone, irrespective of the notification history. So users who travel outside EST potentially receive notifications outside their designated time slots or repeated notifications in the same time slot.

Instances where the momentary decision took place outside the designated time slot are depicted below, where darker points coincide with larger differences between the intended and actual time slots. Here we ignore any discrepancies due to the time lag that arises when the decision is based on pre-fetched data.
<<slot, fig.height=3>>=
decision <- decision[with(decision, order(user, date.stamp, slot)), ]
decision$index <- do.call("c", sapply(table(decision$user) - 1, seq, from = 0,
                                      by = 1, simplify = FALSE))
with(subset(decision, user %in% daily$user & slot != time.stamp.slot),
     plot(index, user, pch = 16, cex = 0.75, frame.plot = FALSE,
          col = rev(grey.colors(5))[abs(slot - time.stamp.slot)],
          xlab = "Momentary decision index", ylab = "User"))
d <- with(decision, sapply(unique(user),
                           function(u) with(subset(decision, user == u),
                                            table(slot != time.stamp.slot)),
                           simplify = FALSE))
d <- do.call("c", lapply(d, function(x) x[1] / sum(x)))
@
The proportion of within-slot decisions among the users has an average of \Sexpr{round(mean(d), 2)} and range \Sexpr{round(min(d), 2)}--\Sexpr{round(max(d), 2)}. Because the discrepancy from the designated time slots tends to be small and infrequent, we propose simply indexing decisions as they arise; any variables representing calendar time (e.g. time of day) could be evaluated under the correct time zone. The \Sexpr{sum(dup.decision$data$dup)} duplicates among these decisions are resolved by discarding decisions that take place in the wrong time slot or have the ``do not notify'' result (\cref{sec:dup}).

\subsection{Randomized versus administered suggestion status}

The Momentary{\_}Decision and Response tables are largely in agreement, with only \Sexpr{with(suggest, sum(notification.message != returned.message, na.rm = TRUE))} decisions conflicting with the suggestion actually administered in terms of either the result (notify or not) or the notification message. The source of this issue is unknown. For analysis, we consider the ad.

\subsection{Suggestion message tags and strings}

The activity suggestion messages were not stored with the bucket tags used for contextualization. To address this we apply all relevant tags post-hoc, using the curated list of suggestions. Note that all relevant tags are not necessarily the tags that influenced the message selection. Moreover the list gives the message strings as-displayed with non-ASCII characters. Internally HeartSteps strips ASCII characters, but this is not performed consistently. To enable consistent linkage, we strip the message strings of escape codes, punctuation, non-ASCII characters and extraneous white space.

\section{User characteristics}

\section{EMAs}

\subsection{Hecticness}

At each EMA, the user was asked ``How hectic was your day today?'' A \Sexpr{length(ema1)}-point scale was provided, with 1 labelled as ``\Sexpr{names(ema1[1])}'' and 5 labelled as ``\Sexpr{names(rev(ema1)[1])}''.  Here we depict the responses over time, where darker points correspond to more hectic days. No point is plotted if no response is available, due to either non- or pending response.
<<ema1, fig.height=3>>=
with(daily, plot(study.day, user, pch = 16,
                 col = rev(grey.colors(length(ema1)))[hectic],
                 frame.plot = FALSE, xlab = "Study day", ylab = "User"))
@

\subsection{Stress}

At each EMA, the user was asked ``How stressful was your day today?'' A \Sexpr{length(ema2)}-point scale was provided, with 1 labelled as ``\Sexpr{names(ema2[1])}'' and 5 labelled as ``\Sexpr{names(rev(ema2)[1])}''. Here we depict the responses over time, where darker points correspond to more stressful days. No point is plotted if no response is available, due to either non- or pending response.
<<ema2, fig.height=3>>=
with(daily, plot(study.day, user, pch = 16,
                 col = rev(grey.colors(length(ema2)))[stressful],
                 frame.plot = FALSE, xlab = "Study day", ylab = "User"))
@

\subsection{Typicalness for the day of the week}

At each EMA, the user was asked ``How typical was today for a X?'', where ``X'' is the current day of the week. A \Sexpr{length(ema3)}-point scale was provided, with 1 labelled as ``\Sexpr{names(ema3[1])}'' and 5 labelled as ``\Sexpr{names(rev(ema3)[1])}''.  Here we depict the responses over time, where darker points correspond to more atypical days. No point is plotted if no response is available, due to either non- or pending response. 
<<ema3, fig.height=3>>=
with(daily, plot(study.day, user, pch = 16,
                 col = grey.colors(length(ema3))[typical],
                 frame.plot = FALSE, xlab = "Study day", ylab = "User"))
@

\section{Daily step count}

The following plots give the daily step count for each user; the solid series corresponds to Jawbone and dotted to Google Fit. Breaks in the series indicate no step counts were recorded that day. The horizontal line gives the user average daily Jawbone step count; this extends up to the known or projected exit date. Vertical lines correspond to days on which no part of the EMA response is available.
<<dailysteps,fig.height=1.75>>=
invisible(sapply(unique(daily$user), plot.daily.steps))
@

\end{document}
