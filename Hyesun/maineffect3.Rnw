\documentclass{article}

\usepackage{float}
\usepackage{amsmath}
\usepackage{cleveref}
\usepackage[a4paper, portrait, margin=1in]{geometry}

\title{\bfseries Daily main effect analysis}
\begin{document}
\maketitle
\begin{center}
\author{Hyesun Yoo}
\end{center}

<<data, echo = FALSE, include = FALSE>>=
###weather is overloaded. I used newly recieved data 
sys.var_mbox.data = "Z:/HeartSteps/Data"
sys.var_repo = "C:/Users/user/Documents/GitHub/heartstepsdata"
setwd(sys.var_repo)
source("init.R")
setwd(sys.var_mbox.data)
load("csv.RData")
load("analysis.RData")
daily.jb = read.csv("daily.jbsteps.csv")
setwd("Z:/HeartSteps/Hyesun's")
load("location_for_decision.RData")
load("weather.RData")
setwd("C:/Users/user/Documents/GitHub/heartstepsdata/Hyesun")
library("lattice")
color <- "chartreuse"
color.name <- "green"
@


<<setting, echo=FALSE, eval=TRUE>>=
## Included ema.set to daily to analyze ema.set
daily <- merge(daily,
               aggregate(subset(ema, select = c(ema.set)),
                         by = with(ema, list(user, ema.date)),
                         function(x) na.omit(x)[1]),
               by.x = c("user", "study.date"),
               by.y = paste("Group", 1:2, sep = "."), all.x = TRUE)

##############attach daily jbsteps##############################
daily.jb$DATE=as.character(daily.jb$DATE)
daily.jb$DATE = as.Date(daily.jb$DATE, "%Y%m%d")

daily=merge(daily, subset(daily.jb,select=c(user, DATE, m_steps)), by.x=c("user","study.date")
        , by.y = c("user","DATE"), all.x=TRUE)

## daily log jawbone steps and pre log jawbone steps
daily$dailyjb.log=log(daily$m_steps+1/2)
daily$dailyjbpre.log=c(0,daily$dailyjb.log[-nrow(daily)])
daily$dailyjbpre.log[daily$study.day==0] = 0

## daily sqrt jbsteps and pre sqrt jbsteps
daily$dailyjb.sqrt=sqrt(daily$m_steps)
daily$dailyjbpre.sqrt=c(0,daily$dailyjb.sqrt[-nrow(daily)])
daily$dailyjbpre.sqrt[daily$study.day==0] = 0

## lag2 ##no effect
daily$dailyjbpre2.sqrt=c(0, 0, daily$dailyjb.sqrt[-((nrow(daily)-1):nrow(daily))])
daily$dailyjbpre2.sqrt[daily$study.day==0] = 0
daily$dailyjbpre2.sqrt[daily$study.day==1] = 0

## quadratic study day nogap
daily$study.day.nogap.sq=(daily$study.day.nogap)^2

## study.day.pre
daily$study.day.nogap.pre=daily$study.day.nogap-1
daily$study.day.nogap.pre.sq=(daily$study.day.nogap.pre)^2

##daily plan TRUE and pre plan TRUE
daily$planTrue=(daily$planning %in% c("structured","unstructured"))
daily$planTrue.pre=c(0,daily$planTrue[-nrow(daily)])
daily$planTrue.pre[daily$study.day==0] = 0
daily$planWeight=(daily$planning %in% c("structured","unstructured","no_planning"))
daily$planWeight.pre=c(0,daily$planWeight[-nrow(daily)])

## unstructured planning 
daily$USplanTrue=(daily$planning %in% c("unstructured"))
daily$USplanTrue.pre=c(0,daily$USplanTrue[-nrow(daily)])
daily$USplanTrue.pre[daily$study.day==0] = 0

daily$SplanTrue=(daily$planning %in% c("structured"))
daily$SplanTrue.pre=c(0,daily$SplanTrue[-nrow(daily)])
daily$SplanTrue.pre[daily$study.day==0] = 0

## respond 
#daily$respond.pre=c(0,daily$respond[-nrow(daily)])
#daily$respond.pre[daily$study.day==0] = 0

## setting city and state######################################
decision$city.coor=location_for_decision$city.coor
decision$state.coor=location_for_decision$state.coor


## attaching city and state####################################
tmp=aggregate(paste(city.coor,state.coor,sep="_")~date.stamp+user,data=decision, 
               FUN = function(x) length(unique(x)))
names(tmp)[1]="study.date" ;names(tmp)[3]="city.number"
temp1=merge(daily, tmp, by.x = c("user", "study.date"), by.y = c("user", "study.date"),
      all.x = TRUE)

## add city and state to suggest data frame#############################
suggest_temp <- merge(suggest,subset(decision,
                                  select=c("user", "date.stamp", "slot","city.coor","state.coor")),
                   by.x = c("user", "study.date", "slot"),
                   by.y = c("user", "date.stamp", "slot"), all.x = TRUE)

## add precipitation data to suggest data frame ############################
## precipitation has "None" value as well
suggest_temp <- merge(suggest_temp,subset(weather,select=c("study.date","city.coor","state.coor","precip")),
                   by.x=c("study.date", "city.coor","state.coor"),
                   by.y=c("study.date", "city.coor","state.coor"), all.x = TRUE, sort=FALSE)

suggest_temp <- with(suggest_temp, suggest_temp[order(user, study.date, slot),])
suggest_temp$temperature[suggest_temp$temperature==(-1024)] <- NA
suggest_temp$precipitation.chance[suggest_temp$precipitation.chance=="unknown"] <- NA
suggest_temp$precipitation.chance[suggest_temp$precipitation.chance==(-1)] <- NA


###add average temperature based of "suggest" data to "daily" data frame
tmp <- aggregate(temperature~study.date+user
              , data=suggest_temp, FUN = function(x) mean(x, na.rm = TRUE), na.action = na.pass)
tmp1 <- aggregate(temperature~study.date+user
               , data=suggest_temp, FUN = function(x) paste(sum(!is.na(x)),"/",length(x),sep=""), 
               na.action = na.pass)

tmp <- cbind(tmp,tmp1[,3])
names(tmp)[1] <- "study.date" ;names(tmp)[3] <- "temp_mean";names(tmp)[4] <- "temp_day_used";

temp1 <- merge(temp1, tmp,
         by.x = c("user", "study.date"), by.y = c("user", "study.date"),
         all.x = TRUE)

###add daily precipitation based on "suggest" data to "daily" data frame
tmp <- aggregate(as.numeric(precip)~study.date+user
               , data=suggest_temp, FUN = function(x) mean(x, na.rm = TRUE), na.action = na.pass)
tmp1 <- aggregate(precip~study.date+user
               , data=suggest_temp, FUN = function(x) paste(sum(!is.na(x)),"/",length(x),sep=""),
               na.action = na.pass)

tmp <- cbind(tmp,tmp1[,3])
names(tmp)[1] <- "study.date" ;names(tmp)[3] <- "daily.precip_mean";names(tmp)[4] <- "daily.precip_mean_used";

temp1 <- merge(temp1, tmp,
         by.x = c("user", "study.date"), by.y = c("user", "study.date"),
         all.x = TRUE)

temp1 <- with(temp1,temp1[order(user,study.date),])

temp <- temp1[!is.na(temp1$study.day.nogap),]
temp <- temp[temp$study.day.nogap %in% 0:41,]
@



\section{Models including weekend indicator}
<<weekday_data, echo=FALSE, eval=TRUE>>=
temp=temp[temp$study.day.nogap!=0,]
temp=temp[temp$study.day.nogap!=1,]

temp=temp[!is.na(temp$dailyjb.sqrt) & !is.na(temp$dailyjbpre.sqrt),]
tmp1=temp[as.logical(temp$planWeight.pre),]
## there is missing value in context.wday which is wrong########################################
tmp1$wday=strftime(tmp1$study.date,'%u')
tmp1$weekendTrue=tmp1$wday %in% 6:7
## Weekday wday is coded as 1:5 is Mon-Fri#####################################################
@

\begin{itemize}
  \item $Y_{t+1}$ is square root transformed Jawbone step count on the day following the $t^{\text{th}}$ planning randomization,
  \item $Z_{t}$ is square root transformed Jawbone step count on the day of $t^{\text{th}}$ planning randomization,
  \item $A_{t}$ is an indicator of whether or not planning intervention was provided at occasion $t$,
  \item $A_{1, t}$ is an indicator of whether or not unstructured planning intervention was provided at occasion $t$,
  \item $A_{2, t}$ is an indicator of whether or not structured planning intervention was provided at occasion $t$,
\end{itemize}

\subsection{Planning message}
\begin{equation}
  Y_{t+1} \sim \alpha_{0} + \alpha_{1} Z_{t} + \alpha_{2} W_{t+1}+\beta_{1}\left( A_{t} - 0.5 \right)+\beta_{2}\left( A_{t} - 0.5 \right)W_{t+1},
  \label{eqn:model-weekday0} 
\end{equation}

\begin{itemize}
  \item $W_{t+1}$ is an indicator whether or not it is weekend. Weekend is coded as TRUE (value : 1).
\end{itemize}

<<maineffect_weekend, echo=F, results="asis">>=
model.plan.week <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue)+I(planTrue.pre - .5)+I(planTrue.pre - .5):I(weekendTrue), id = user, scale.fix = T, data = tmp1)

names(model.plan.week$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$")
print(xtable(estimate(model.plan.week, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-weekday0}", label = "tab:model-weekday0", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity)
@


<<mean_residual_model1w, echo=FALSE,fig.height=5, fig.cap="plot of mean residuals from model~\\labelcref{eqn:model-weekday0} averaged over study day. span = 1/3 (left) and span = 2/3 (right)", fig.pos="H">>=
data_tmp=tmp1
a=residuals(model.plan.week)
y=cbind(a,data_tmp[,"study.day.nogap"])
colnames(y)=c("resid","day")
y=aggregate(resid~day, data=y, mean)

par(mfrow=c(1,2))
with(y, scatter.smooth(resid ~ day, type = "l", span = 1/3,lpars=list(col="blue"),
                       xlab="Study day(exclude travel day)", ylab="Mean residuals"))
abline(h=0)
with(y, scatter.smooth(resid ~ day, type = "l", span = 2/3,lpars=list(col="blue"), 
                       xlab="Study day(exclude travel day)", ylab="Mean residuals"))
abline(h=0)
@

<<residual_overdays_model1w, echo=FALSE, fig.height=4, fig.cap="residuals over study day from model~\\labelcref{eqn:model-weekday0} ", fig.pos="H">>=
par(mfrow=c(1,1))
data_tmp$residual=a
## for dotted residuals. 
with(data_tmp,interaction.plot(study.day.nogap, user, residual,legend=FALSE,type="p",pch=16,ylim=c(-100,100), 
                               xlab="Study day(exclude travel day)", ylab="residuals"))
abline(h=0, lwd=3)
abline(h=50, lwd=1)
abline(h=-50, lwd=1)
@

<<residual_overdays_l_model1w, echo=FALSE, fig.height=4, fig.cap="residuals over study day for each user from model~\\labelcref{eqn:model-weekday0}. Each user's residuals are connected.", fig.pos="H">>=
xyplot(residual ~ study.day.nogap, data = data_tmp, groups = user, type = "l",  panel = function(x,y,groups, ...){
  panel.xyplot(x, y, groups,...)
  panel.abline(h=0, lwd=3)
  }, color="black",
       title = "weekday", ylim=c(-120,120), xlab="Study day(exclude travel day)", ylab="residuals")
@

<<fitted_rawresidual_model1w, echo=FALSE, fig.height=5, fig.cap="fitted values vs residuals  from model~\\labelcref{eqn:model-weekday0} ",fig.pos="H">>=
##pearson residuals and raw residuals are the same.
par(mfrow=c(1,1))
xx=fitted(model.plan.week)
rr=data_tmp$residual
plot(xx,rr, xlab="fitted values", ylab="residuals")
abline(h=0)
m<-lowess(rr~xx, f=2/3)
lines(m)
@

<<boxplot_res_m1weekday, echo=FALSE, fig.height=5, fig.cap="plan yesterday==True vs residuals from model~\\labelcref{eqn:model-weekday0} ",fig.pos="H">>=
boxplot(residual~planTrue.pre,data=data_tmp,xlab="plan yesterday(1:plan yesterday TRUE)")
@




\subsection{Unstructured vs Structured planning vs No planning}
\begin{equation}
\begin{aligned}
  Y_{t+1} \sim \alpha_{0} + \alpha_{1} Z_{t} + \alpha_{2} W_{t+1}+\\
  \beta_{1}\left( A_{1,t} - 0.25 \right)+\beta_{2}\left( A_{2,t} - 0.25 \right)+\beta_{3}\left( A_{1,t} - 0.25 \right)W_{t+1}+\beta_{4}\left( A_{2,t} - 0.25 \right)W_{t+1},
  \label{eqn:model-weekday1} 
\end{aligned}
\end{equation}

<<maineffect_weekend1, echo=F, results="asis">>=
model.plan.week1 <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue) + I(USplanTrue.pre - .25) + I(SplanTrue.pre - .25) + I(USplanTrue.pre - .25):I(weekendTrue) + I(SplanTrue.pre - .25):I(weekendTrue), id = user, scale.fix = T, data = tmp1)

names(model.plan.week1$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$","$\\beta_{3}$","$\\beta_{4}$")
print(xtable(estimate(model.plan.week1, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-weekday1}",
             label = "tab:model-weekday1", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity)
@


<<mean_residual_model1, echo=FALSE,fig.height=5, fig.cap="plot of mean residuals from model~\\labelcref{eqn:model-weekday1} averaged over study day. span = 1/3 (left) and span = 2/3 (right)", fig.pos="H">>=
data_tmp=tmp1
a=residuals(model.plan.week1)
y=cbind(a,data_tmp[,"study.day.nogap"])
colnames(y)=c("resid","day")
y=aggregate(resid~day, data=y, mean)

par(mfrow=c(1,2))
with(y, scatter.smooth(resid ~ day, type = "l", span = 1/3,lpars=list(col="blue"),
                       xlab="Study day(exclude travel day)", ylab="Mean residuals"))
abline(h=0)
with(y, scatter.smooth(resid ~ day, type = "l", span = 2/3,lpars=list(col="blue"), 
                       xlab="Study day(exclude travel day)", ylab="Mean residuals"))
abline(h=0)
@

<<residual_overdays_model1, echo=FALSE, fig.height=4, fig.cap="residuals over study day from model~\\labelcref{eqn:model-weekday1} ", fig.pos="H">>=
par(mfrow=c(1,1))
data_tmp$residual=a
## for dotted residuals. 
with(data_tmp,interaction.plot(study.day.nogap, user, residual,legend=FALSE,type="p",pch=16,ylim=c(-100,100), 
                               xlab="Study day(exclude travel day)", ylab="residuals"))
abline(h=0, lwd=3)
abline(h=50, lwd=1)
abline(h=-50, lwd=1)
@

<<residual_overdays_l_model1, echo=FALSE, fig.height=4, fig.cap="residuals over study day for each user from model~\\labelcref{eqn:model-weekday1}. Each user's residuals are connected.", fig.pos="H">>=
xyplot(residual ~ study.day.nogap, data = data_tmp, groups = user, type = "l",  panel = function(x,y,groups, ...){
  panel.xyplot(x, y, groups,...)
  panel.abline(h=0, lwd=3)
  }, color="black",
       title = "weekday", ylim=c(-120,120), xlab="Study day(exclude travel day)", ylab="residuals")
@

<<fitted_rawresidual_model1, echo=FALSE, fig.height=5, fig.cap="fitted values vs residuals  from model~\\labelcref{eqn:model-weekday1} ",fig.pos="H">>=
##pearson residuals and raw residuals are the same.
par(mfrow=c(1,1))
xx=fitted(model.plan.week1)
rr=data_tmp$residual
plot(xx,rr, xlab="fitted values", ylab="residuals")
abline(h=0)
m<-lowess(rr~xx, f=2/3)
lines(m)
@

<<boxplot_res_m2weekday, echo=FALSE, fig.height=5, fig.cap="plan yesterday==True vs residuals from model~\\labelcref{eqn:model-weekday1} ",fig.pos="H">>=
s=data_tmp$planTrue.pre
s[data_tmp$SplanTrue.pre==TRUE]=2
boxplot(residual~s,data=data_tmp,xlab="plan yesterday(1:unstructure plan yesterday TRUE, 2:structure plan yesterday TRUE)")
@

\section{Slightly different models - (1-$W_{t+1}$, $W_{t+1}$)}
\begin{equation}
  Y_{t+1} \sim \alpha_{0} + \alpha_{1} Z_{t} + \alpha_{2} W_{t+1}+\beta_{1}\left( A_{t} - 0.5 \right)(1-W_{t+1})+\beta_{2}\left( A_{t} - 0.5 \right)W_{t+1},
  \label{eqn:model-switch1} 
\end{equation}

<<maineffect_weekend_switch, echo=F, results="asis">>=
model.plan.week <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue)+I(planTrue.pre - .5):(1-I(weekendTrue))+I(planTrue.pre - .5):I(weekendTrue), id = user, scale.fix = T, data = tmp1)

names(model.plan.week$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$")
print(xtable(estimate(model.plan.week, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-switch1}", label = "tab:model-switch1", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@

\begin{equation}
\begin{aligned}
  Y_{t+1} \sim \alpha_{0} + \alpha_{1} Z_{t} + \alpha_{2} W_{t+1}+\\
  \beta_{1}\left( A_{1,t} - 0.25 \right)(1-W_{t+1})+\beta_{2}\left( A_{1,t} - 0.25 \right)W_{t+1}+\beta_{3}\left( A_{2,t} - 0.25 \right)(1-W_{t+1})+\beta_{4}\left( A_{2,t} - 0.25 \right)W_{t+1},
\label{eqn:model-switch2} 
\end{aligned}
\end{equation}

<<maineffect_weekend1_switch, echo=F, results="asis">>=
model.plan.week1 <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue) + (1-I(weekendTrue)):I(USplanTrue.pre - .25) + I(weekendTrue):I(USplanTrue.pre - .25) + (1-I(weekendTrue)):I(SplanTrue.pre - .25) + I(weekendTrue):I(SplanTrue.pre - .25), id = user, scale.fix = T, data = tmp1)

names(model.plan.week1$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$","$\\beta_{3}$","$\\beta_{4}$")
print(xtable(estimate(model.plan.week1, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-switch2}",
             label = "tab:model-switch2", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@

These models are very straightforward. They are combinations of a model using only the weekdays and a model using only the weekends in maineffect2.pdf. Their coefficients are quite similar to these results. This model indicates that only unstructured planning during a weekday is significant in our study, which is a result consistent with what we have seen. 



\section{time trend}
\begin{equation}
  Y_{t+1} \sim \alpha_{0} + \alpha_{1} Z_{t} + \alpha_{2} d(t) + \alpha_{3} W_{t+1}+\beta_{1}\left( A_{t} - 0.5 \right)+\beta_{2}\left( A_{t} - 0.5 \right)W_{t+1},
  \label{eqn:timetrend1} 
\end{equation}

<<maineffect_weekendday, echo=F, results="asis">>=
model.plan.week <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt +study.day.nogap.pre + I(weekendTrue)+I(planTrue.pre - .5)+I(planTrue.pre - .5):I(weekendTrue), id = user, scale.fix = T, data = tmp1)

names(model.plan.week$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$","$\\alpha_{3}$", "$\\beta_{1}$","$\\beta_{2}$")
print(xtable(estimate(model.plan.week, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:timetrend1}", label = "tab:timetrend1", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@



\begin{equation}
\begin{aligned}
  Y_{t+1} \sim \alpha_{0} + \alpha_{1} Z_{t} + \alpha_{2} d(t) + \alpha_{3} W_{t+1}+\\
  \beta_{1}\left( A_{1,t} - 0.25 \right)+\beta_{2}\left( A_{2,t} - 0.25 \right)+\beta_{3}\left( A_{1,t} - 0.25 \right)W_{t+1}+\beta_{4}\left( A_{2,t} - 0.25 \right)W_{t+1},
  \label{eqn:timetrend2} 
\end{aligned}
\end{equation}


<<maineffect_weekendday1, echo=F, results="asis">>=
model.plan.week1 <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + study.day.nogap.pre + I(weekendTrue) + I(USplanTrue.pre - .25) + I(SplanTrue.pre - .25) + I(USplanTrue.pre - .25):I(weekendTrue) + I(SplanTrue.pre - .25):I(weekendTrue), id = user, scale.fix = T, data = tmp1)

names(model.plan.week1$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$","$\\alpha_{3}$", "$\\beta_{1}$","$\\beta_{2}$","$\\beta_{3}$","$\\beta_{4}$")
print(xtable(estimate(model.plan.week1, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:timetrend2}",
             label = "tab:timetrend2", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@

Figure 1 of Model (1) in maineffect1.pdf. Figure 6 of Model (2) in maineffect3.pdf suggest that there might be a negative time trend. Therefore, we included time(study day) variable. However, even though the coefficients of study day in both models are negative, those values are not significant. It might be due to the weak time trend or the small sample size. 

\section{Sensitivity analysis}
\subsection{Using only 2-31 days}
<<weekday_data2-31, echo=FALSE, eval=TRUE>>=
temp=temp[temp$study.day.nogap!=0,]
temp=temp[temp$study.day.nogap!=1,]

temp=temp[!is.na(temp$dailyjb.sqrt) & !is.na(temp$dailyjbpre.sqrt),]
tmp1=temp[as.logical(temp$planWeight.pre),]
## there is missing value in context.wday which is wrong########################################
tmp1$wday=strftime(tmp1$study.date,'%u')
tmp1$weekendTrue=tmp1$wday %in% 6:7
## Weekday wday is coded as 1:5 is Mon-Fri#####################################################
## 2-31 days ##
tmp2=tmp1[tmp1$study.day.nogap %in% 2:31,]
@
Total $\Sexpr{nrow(tmp2)}$ person-day datapoints are used in this analysis.

<<maineffect_weekend2-31, echo=F, results="asis">>=
model.plan.week <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue)+I(planTrue.pre - .5)+I(planTrue.pre - .5):I(weekendTrue), id = user, scale.fix = T, data = tmp2)

names(model.plan.week$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$")
print(xtable(estimate(model.plan.week, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-weekday0} 2-31 study days", label = "tab:model-weekday0", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@

<<maineffect_weekend1_2-31, echo=F, results="asis">>=
model.plan.week1 <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue) + I(USplanTrue.pre - .25) + I(SplanTrue.pre - .25) + I(USplanTrue.pre - .25):I(weekendTrue) + I(SplanTrue.pre - .25):I(weekendTrue), id = user, scale.fix = T, data = tmp2)

names(model.plan.week1$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$","$\\beta_{3}$","$\\beta_{4}$")
print(xtable(estimate(model.plan.week1, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-weekday1} 2-31 study days",
             label = "tab:model-weekday1", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@

\subsection{Using only 2-36 days}
<<weekday_data2-36, echo=FALSE, eval=TRUE>>=
temp=temp[temp$study.day.nogap!=0,]
temp=temp[temp$study.day.nogap!=1,]

temp=temp[!is.na(temp$dailyjb.sqrt) & !is.na(temp$dailyjbpre.sqrt),]
tmp1=temp[as.logical(temp$planWeight.pre),]
## there is missing value in context.wday which is wrong########################################
tmp1$wday=strftime(tmp1$study.date,'%u')
tmp1$weekendTrue=tmp1$wday %in% 6:7
## Weekday wday is coded as 1:5 is Mon-Fri#####################################################
## 2-36 days ##
tmp2=tmp1[tmp1$study.day.nogap %in% 2:36,]
@
Total $\Sexpr{nrow(tmp2)}$ person-day datapoints are used in this analysis.

<<maineffect_weekend2-36, echo=F, results="asis">>=
model.plan.week <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue)+I(planTrue.pre - .5)+I(planTrue.pre - .5):I(weekendTrue), id = user, scale.fix = T, data = tmp2)

names(model.plan.week$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$")
print(xtable(estimate(model.plan.week, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-weekday0} 2-36 study days", label = "tab:model-weekday0", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@

<<maineffect_weekend1_2-36, echo=F, results="asis">>=
model.plan.week1 <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue) + I(USplanTrue.pre - .25) + I(SplanTrue.pre - .25) + I(USplanTrue.pre - .25):I(weekendTrue) + I(SplanTrue.pre - .25):I(weekendTrue), id = user, scale.fix = T, data = tmp2)

names(model.plan.week1$coefficients) <- c("$\\alpha_{0}$", "$\\alpha_{1}$","$\\alpha_{2}$", "$\\beta_{1}$","$\\beta_{2}$","$\\beta_{3}$","$\\beta_{4}$")
print(xtable(estimate(model.plan.week1, normal = FALSE),
             caption = "Fitted coefficients and univariate Hotelling's T tests for Model~\\labelcref{eqn:model-weekday1} 2-36 study days",
             label = "tab:model-weekday1", floating = FALSE, digits = 3), 
      sanitize.rownames.function = identity, table.placement="H")
@


\section{Discussion on why these models make sense}
\subsection{Model (1) in maineffect1.pdf vs maineffect3.pdf (this document)}
\begin{equation}
  Y_{t+1} \sim \alpha_{0} + \alpha_{1} Z_{t} + \beta_{1}\left( A_{t} - 0.5 \right),
  \tag{Model (1) comparison in maineffect1.pdf}
\end{equation}


<<residual_diff_situation1, echo=FALSE,fig.height=5, fig.cap="boxplot of residuals from Model (1) in maineffect1.pdf", fig.pos="H">>=
model.plan1 <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(planTrue.pre - .5),
                      id = user, scale.fix = T, data = tmp1)
#estimate(model.plan1, normal = FALSE)
a = residuals(model.plan1)
b <- as.logical(tmp1$planTrue.pre)
c <- tmp1$weekendTrue

par(mfrow=c(1,2))
boxplot(a[!b]~c[!b],ylim=c(-100,100), xlab="Weekend" ,main="There was no planning yesterday")
boxplot(a[b]~c[b],ylim=c(-100,100), xlab="Weekend", main="There was planning yesterday")
@

Here are the residual plots of maineffect1 Model (1). If you look at the plot on the right hand side, ``there was planning yesterday" plot, you will see the medians of residuals are different depending on whether it was the weekday or weekend (i.e. mean residual when there was planning yesterday and weekend is $\Sexpr{round(mean(a[b & c]),digits=3)}$ and, mean residual when there was planning yesterday and weekday is $\Sexpr{round(mean(a[b & !c]),digits=3)}$). Inclusion of weekend indicator variable can be considered as one of the possible solutions to problem. 

If you look at the coefficients of Model (1) in maineffect2.pdf or Section 4 in this document, you can see that their coefficients' values have opposite signs with each other. Roughly saying, my guess is that the planning on the weekdays and the weekends somehow affect the results in the opposite directions. Therefore, if you do not take the weekend indicator variable into consideration, the effect of planning could become seemingly weak.  

<<residual_diff_situation3, echo=FALSE,fig.height=5, fig.cap="boxplot of residuals from Model (1) in maineffect3.pdf", fig.pos="H">>=
model.plan.week <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue)+I(planTrue.pre - .5)+
                            I(planTrue.pre - .5):I(weekendTrue), id = user, scale.fix = T, data = tmp1)
#estimate(model.plan_i, normal = FALSE)
a = residuals(model.plan.week)
b <- as.logical(tmp1$planTrue.pre)
c <- tmp1$weekendTrue

par(mfrow=c(1,2))
boxplot(a[!b]~c[!b],ylim=c(-100,100), xlab="Weekend" ,main="There was no planning yesterday")
boxplot(a[b]~c[b],ylim=c(-100,100), xlab="Weekend", main="There was planning yesterday")
@
If we include the weekend indicator variable and the interaction term, we will get the residual plots like these. Mean residual when there was planning yesterday and it is weekend today is $\Sexpr{round(mean(a[b & c]),digits=3)}$ and, mean residual when there was planning yesterday and it is weekday today is $\Sexpr{round(mean(a[b & !c]),digits=3)}$.

\subsection{Model (2) comparison in maineffect1.pdf vs maineffect3.pdf (this document)}

\begin{equation}
		\label{eqn:actsed-marginal-model}
		Y_{t+1} &\sim \alpha_{0} + \alpha_{1} Z_{t} + \beta_{1} \left(A_{1, t} - 0.25\right) + \beta_{2} \left(A_{2, t} - 0.25\right), 
  \tag{Model (2) in maineffect1.pdf}
\end{equation}

Same analogy in section 1 could be applied here as well. 

<<residual_diff_situation4, echo=FALSE,fig.height=5, fig.cap="boxplot of residuals from Model (2) in maineffect1.pdf", fig.pos="H">>=
model.plan1.2 <-  geeglm(dailyjb.sqrt ~ dailyjbpre.sqrt + I(USplanTrue.pre - 0.25) +
                    I(SplanTrue.pre - 0.25), id = user, 
                  data = tmp1, scale.fix = T)
#estimate(model.plan1.2, normal = FALSE)
a = residuals(model.plan1.2)
b <- tmp1$planTrue.pre
b[tmp1$SplanTrue.pre==TRUE]=2
c <- tmp1$weekendTrue


par(mfrow=c(1,3))
boxplot(a[b==0]~c[b==0],ylim=c(-100,100), xlab="Weekend" ,main="There was no planning yesterday")
boxplot(a[b==1]~c[b==1],ylim=c(-100,100), xlab="Weekend", main="unstructured planning yesterday")
boxplot(a[b==2]~c[b==2],ylim=c(-100,100), xlab="Weekend", main="structured planning yesterday")
@


<<residual_diff_situation6, echo=FALSE,fig.height=5, fig.cap="boxplot of residuals from Model (2) in maineffect3.pdf", fig.pos="H">>=
model.plan.week1 <- geeglm(dailyjb.sqrt~ dailyjbpre.sqrt + I(weekendTrue) + I(USplanTrue.pre - .25) + I(SplanTrue.pre - .25) + I(USplanTrue.pre - .25):I(weekendTrue) + I(SplanTrue.pre - .25):I(weekendTrue), id = user, scale.fix = T, data = tmp1)
#estimate(model.plan_i, normal = FALSE)
a = residuals(model.plan.week1)
b <- tmp1$planTrue.pre
b[tmp1$SplanTrue.pre==TRUE]=2
c <- tmp1$weekendTrue


par(mfrow=c(1,3))
boxplot(a[b==0]~c[b==0],ylim=c(-100,100), xlab="Weekend" ,main="There was no planning yesterday")
boxplot(a[b==1]~c[b==1],ylim=c(-100,100), xlab="Weekend", main="unstructured planning yesterday")
boxplot(a[b==2]~c[b==2],ylim=c(-100,100), xlab="Weekend", main="structured planning yesterday")
@


\end{document}